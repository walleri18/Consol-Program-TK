/*
	Практика программирования. ТК.
	Решение: Обработка исключений
	Автор: Туров Виталий Александрович
	Группа: 514
*/
/*
	Проект №1.
	Модифицировать предыдущую задачу. Ввести класс исключения. В классе хранить код ошибки. Коды
	возможных ошибок описать в виде пречисления. Генерировать исключения при переполнении стека и при
	попытке чтения из пустого стека. В классе исключения реализовать функцию, возвращающую строку с
	описанием ошибки. В main реализовать обработку возможных исключений.
*/

#ifdef UNICODE
#undef UNICODE
#endif

#include <locale.h>
#include <iostream>
#include <ctime>
#include <cstdlib>

// Библиотека наших классов
#include "Stek.h"

using namespace std;

// Точка входа

int main(void)
{
	setlocale(LC_ALL, "ru"); // Установка кодировки windows-1251
	
	// Зерно рандома
	srand(time(NULL));

	// Объявление стека
	Stek<int> stek1(5);

	Stek<double> stek2(5);

	// Блок прехвата исключения
	try
	{

		// Заполнение стека случайным образом
		for (int i = 0; i < 6; i++)
		{
			// Заполнение случайными числами
			stek1.push(rand() % (1000 - 500 + 1) - 500);

			// Вывод
			if (i < 5)
				cout << stek1;
		}

	}
	// Обработка исключений
	catch (Exception error)
	{
		cout << endl << error;
	}
	
	// Блок прехвата исключения
	try
	{
		// Заполнение стека случайным образом
		for (int i = 0; i < 6; i++)
		{
			// Заполнение случайными числами
			stek2.push((double)(rand() % (9000 - 0 + 1) - 0) + 0.1);

			// Вывод
			if (i < 5)
				cout << stek2;
		}
	}
	// Обработка исключений
	catch (Exception error)
	{
		cout << endl << error;
	}

	// Красота
	cout << endl << endl
		<< "Вынимание элементов из стека: " << endl << endl;

	// Блок прехвата исключения
	try
	{
		// Вынимание элементов из стека
		for (int i = 0; i < 6; i++)
		{
			// Вынимание из стека
			stek1.pop();
			if (i < 5)
				cout << stek1;
		}
	}
	// Обработка исключений
	catch (Exception error)
	{
		cout << endl << error;
	}

	// Блок прехвата исключения
	try
	{
		for (int i = 0; i < 6; i++)
		{
			// Вынимание из стека
			stek2.pop();
			if (i < 5)
				cout << stek2;
		}
	}
	// Обработка исключений
	catch (Exception error)
	{
		cout << endl << error;
	}

	system("pause >> void");
	return 0;
}