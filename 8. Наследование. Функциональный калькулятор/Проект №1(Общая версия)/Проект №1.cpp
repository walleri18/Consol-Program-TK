/*
	Практика программирования. ТК.
	Решение: Задача на тему наследование. Функциональный калькулятор
	Автор: Туров Виталий Александрович
	Группа: 514
*/
/*
	Проект №1.
	Разработать программу, имитирующую работу функционального калькулятора, который
	позволяет выбирать с помщью меню какую-либо из известных ему функций, затем 
	предлагает ввести значение аргумента и после ввода выдаёт соответствующее значение функции.
	Для реализации возможности простой модернизации программы в дальнейшем,
	придерживаться следующих рекомендаций:
	а) Описать абстрактный базовый класс для представления любой функции
	(интерфейс поведения любой функции). Класс должен содержать чисто виртуальную функцию, которая реализуется в классах-потомках
	(конкретных математических функциях). Эта функция организует диалог с пользователем
	(запрос аргумента(ов), вычисление и выдача результата).
	б) В клиентской части программы (main и, возможно, другие функции) объявить и заполнить массив указателей на объекты существующих классов математических функций.
	Данный массив использовать при формировании меню и при вычислении выбранной пользователем функции.
*/

#ifdef UNICODE
#undef UNICODE
#endif

#include <locale.h>
#include <iostream>

// Библиотека наших классов
#include "Sin.h" // Синус
#include "Pow.h" // Степень
#include "Exp.h" // Экспонента

using namespace std;

// Точка входа

int main(void)
{
	setlocale(LC_ALL, "ru"); // Установка кодировки windows-1251
	// Приветствие
	cout << "Добро пожаловать в программу функционального калькулятора!!!" << endl;
	
	// Переменная выбора функции
	int functionSelection(0);

	// Выбор функции
	CalculateFunction *fun[] = {new Sin, new Pow, new Exp};

	// количество функций
	int func_count = sizeof(fun) / sizeof(CalculateFunction*);
	
	for (;;)
	{
		do
		{
			// отображение меню
			for (int i = 0; i < func_count; i++)
			{
				cout << i + 1 << ". " << fun[i]->getName() << endl;
			}
			cout << "0. Выход из программы" << endl;

			cout << "Введите номер функции: ";
			cin >> functionSelection;

			cout << endl << endl;

		} while (functionSelection < 0 || functionSelection > func_count);

		if (functionSelection == 0) exit(1);

		fun[functionSelection - 1]->show();

		cout << endl << endl;
	}

	system("pause >> void");
	return 0;
}