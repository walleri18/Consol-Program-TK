/*
	Практика программирования. ТК.
	Решение: директивы препроцессора и многомодульные проекты
	Автор: Туров Виталий Александрович
	Группа: 514
*/
/*
	Проект №1.
	1. В отдельном включаемом файле директивой #define объявить макрос для округления
	чисел с плавающей точкой до ближайщего целого. В этом же файле объявить 2 (две)
	функции с разными именами, но с одинаковой сигнатурой, принимающие 2
	вещественных параметра и возвращающие вещественные значение.

	2. Реализации (определения) функций поместить в отдельный исходный файл. Реализации
	должны быть полностью совпадающие: проверка наличия определения макроса (с помощью
	#ifdef), вызов макроса для суммы параметров, в случае его наличия, и возвращение округлённого значения суммы.
	В случае отсутствия макроса - вернуть сумму параметров. В файле реализации функций между определениями поместить
	директиву undef, отменяющую определение макроса.

	3. Функция main() реализуется в отдельном исходном файле. В функции последовательно вызвать обе функции. Результаты 
	отобразить на экране. Убедиться в отличии поведения функций.
*/

#ifdef UNICODE
#undef UNICODE
#endif

#include <locale.h>
#include <Windows.h>

#include <iostream>

//Включение моего собственного заголовка
#include "MyHeaderFunction.h"

using namespace std;

// Точка входа

int main(void)
{
	setlocale(LC_ALL, ".1251"); // Установка кодировки windows-1251

	// Приветствие
	cout << "Добро пожаловать в программу!!!" << endl << endl;

	//Желаемые аргументы
	double var1, var2;

	// Ввод желаемых аргументов
	cout << "Введите желаемые аргументы через пробел: ";
	cin >> var1 >> var2;

	// Вывод результатов
	cout << endl << endl << "Вызов функции №1: " << function1(var1, var2) << endl << endl
		<< "Вызов функции №2: " << function2(var1, var2) << endl << endl;

	system("pause >> void");
	return 0;
}